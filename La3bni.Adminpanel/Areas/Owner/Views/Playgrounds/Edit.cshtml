@model Models.Playground

@{
    ViewData["Title"] = "Edit";

    var times = (List<PlaygroundTimes>)ViewData["PlaygroundTimes"];
}
<script src="~/assets/js/core/jquery.min.js"></script>
<script src="~/assets/js/playground.js"></script>
<h1>Edit</h1>

<h4>Playground</h4>
<hr />
<div class="container mb-2">
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit" class="container">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" id="PlaygroundId" asp-for="PlaygroundId" />

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" id="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="City" class="control-label"></label>
                    <select asp-for="City" id="City" asp-items="Html.GetEnumSelectList<Models.City>()" class="form-control"></select>
                    <span asp-validation-for="City" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="StadiumArea" class="control-label"></label>
                    <input asp-for="StadiumArea" id="StadiumArea" class="form-control" />
                    <span asp-validation-for="StadiumArea" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="AmPrice" class="control-label"></label>
                    <input asp-for="AmPrice" id="AmPrice" class="form-control" />
                    <span asp-validation-for="AmPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PmPrice" class="control-label"></label>
                    <input asp-for="PmPrice" id="PmPrice" class="form-control" />
                    <span asp-validation-for="PmPrice" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Services" class="control-label"></label>
                    @foreach (Services ser in Enum.GetValues(typeof(Services)))
                    {
                        if (Model.Services.HasFlag(@ser))
                        {
                            <input type="checkbox" name="Services" class="services" value="@ser" checked />@ser
                        }
                        else
                        {
                            <input type="checkbox" name="Services" value="@ser" />@ser
                        }
                        <br />
                    }
                    <span asp-validation-for="Services" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PlaygroundStatus" class="control-label"></label>
                    <select asp-for="PlaygroundStatus" id="PlaygroundStatus" asp-items="Html.GetEnumSelectList<Models.Status>()" class="form-control"></select>
                    <span asp-validation-for="PlaygroundStatus" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IsOffered" class="control-label"></label>
                    <input asp-for="IsOffered" id="IsOffered" class="form-control" />
                    <span asp-validation-for="IsOffered" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CreatedOn" class="control-label"></label>
                    <input asp-for="CreatedOn" id="CreatedOn" class="form-control" />
                    <span asp-validation-for="CreatedOn" class="text-danger"></span>
                </div>

                <div id="playgroundTimes">
                    @{
                        var displayVal = "none";
                        if (times.Count > 0)
                        {
                            displayVal = "block";
                        }

                        <table style="display:@displayVal">
                            <tr>
                                <th>From</th>
                                <th>To</th>
                                <th></th>
                            </tr>
                            @foreach (var playgroundTimes in times)
                            {
                                var from = (@playgroundTimes.From).ToString("HH:mm");
                                var to = (@playgroundTimes.To).ToString("HH:mm");
                                <tr>
                                    <td><input type="time" value="@from" /></td>
                                    <td><input type="time" value="@to" /></td>
                                    <td><input type="button" onclick="updateRecorde(this,@playgroundTimes.PlaygroundTimesId)" value="update" />|<input type="button" onclick="deleteRecorde(this,@playgroundTimes.PlaygroundTimesId)" value="delete" /></td>
                                </tr>
                            }
                        </table>
                        <table id="timesRecord" style="display:none">
                            @if (displayVal != "block")
                            {
                                <tr id="header">
                                    <th>From</th>
                                    <th>To</th>
                                    <th></th>
                                </tr>
                            }
                        </table>

                        <table>
                            @if (displayVal != "block")
                            {
                                <tr id="header">
                                    <th>From</th>
                                    <th>To</th>
                                    <th></th>
                                </tr>
                            }
                            <tr>
                                <td>
                                    <input type="time" id="from" value="" />
                                </td>
                                <td>
                                    <input type="time" id="to" value="" />
                                </td>
                                <td>
                                    <input type="button" value="+" id="addDifferentPeriod" style="cursor:pointer" />
                                </td>
                            </tr>
                        </table>
                    }
                </div>
                <div class="form-group">

                    <input type="hidden" asp-for="ImagePath" id="ImagePath" class="form-control" />
                </div>
                <div>
                    <input type="button" value="Update" id="AddPlayground" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}